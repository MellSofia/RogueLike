первичный алгоритм обработки событий. он находится внутри главного цикла игры.

- добавления:
добавить в супер-объект параметры направления, действия и скорости движения (=1 - одна единица в координатах при движении за кадр)


- ЭТАП 1: ввод
собирается ввод с клавиатуры, устанавливаются значения поведелния объектов. NPC (не игровые персонажи) действуют согласно своему паттерну, который задается массивом действий и/или определенными условиями. паттерн применяется к каждому NPC(НПС) через функцию, которая при каждом вызове возвращает следующую операцию из списка паттерна, который, в свою очередь, зациклен.

пример: Entity.whatToDo(int action) // action =1 - движение вверх, =2 - движение вправо, .. =6 - ударить и тд. вместо Int можно использовать и слово с указанием действия (для единообразия эти слова можно сделать константами типа чар, дабы исключить ошибочный ввод команды)

в конце этапа все объекты, которые еще "живы" добавляются в массив обработки objectArr


- ЭТАП 2: update
на этом этапе происходит обработка и применение событий, в частности коллизия. запускается цикл по objectArr, внутри которого происходит ряд проверок:

if (objectArr[i].speed!=0)
{
 if (display[objectArr[i].move().y][objectArr[i].move().x] != '.') 
 // проверка на то, пустое ли то место, куда хочет переместиться объект через  метод move(), который возвращает объект типа COORD, который имеет x и y. если  свободно - движение возможно (координаты объекта = objectArr[i].move()), иначе -   выполняется следующий блок
 {
  // здесь происходит поиск объекта, с которым произошла коллизия через символ на   дисплее или через координаты (можно пока вставить цикл по тому же objectArr,   который будет искать соответствие по координатам)
  ...
  hitedObject = objectArr[j]
  ...
  // далее происходит сам вызов обработчиков коллизии для объектов:
  objectArr[i] = objectArr[i].collision_handler(hitedObject.collision_handler  (objectArr[i]));
  // и уже внутри каждой реализации коллизии будут производиться изменения. а   возвращается всегда объект самого объекта, кто делал обработку. Важно! метод   move() не изменяет параметры объекта, он просто выводит предполагаемое их   изменение

 } 

}

- ЭТАП 3: output
уже есть в шаблоне - закрепление изменений на дисплее и вывод его на экран.


=================================================
данный алгоритм является опорным и его не стоит использовать прям как есть: код представлен только как сокращение текста и для большей наглядности. можете изменять его 