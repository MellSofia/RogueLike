ЗАДАНИЕ: придумать и внедрить механизм обработки действий любого количества объектов любого типа, который является потомком SuperObject. 

нужно придумать алгоритм, который (по возможности) исключает необходимость вносить изменения в предков (и в частности SuperObject) для создания нового потомка. в каждом классе должен быть прописан метод collision_handler(), который занимается обработкой столкновения с объектом, который передается ему в параметрах (как ссылка, указатель - не важно). 
в самом int main() во втором блоке в while(main_flag) (степ1 - ввод, степ2 - обработка, степ3 - вывод) должен быть описан алгоритм проверки у всех объектов возможность совершить то действие, которое они запланировали сделать в первом блоке.

в общем нужно придумать оптимальный метод вызова метода update() и collision_hendler() у всех объектов, чтобы в дальнейшем можно было просто создавать потомков существующих классов без изменения основного алгоритма, а сама обработка взаимодействий была бы внутри конкретного объекта/класса.